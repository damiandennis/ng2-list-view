/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './list.view.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/query_list';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
export class Wrapper_ListViewComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ListViewComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ListViewComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_dataService(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.dataService = currValue;
      this._expr_0 = currValue;
    }
  }
  check_changePageEmitter(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.changePageEmitter = currValue;
      this._expr_1 = currValue;
    }
  }
  check_searchTerm(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.searchTerm = currValue;
      this._expr_2 = currValue;
    }
  }
  check_filtersEmitter(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.filtersEmitter = currValue;
      this._expr_3 = currValue;
    }
  }
  check_filterEmitter(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.filterEmitter = currValue;
      this._expr_4 = currValue;
    }
  }
  check_clearFiltersEmitter(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.clearFiltersEmitter = currValue;
      this._expr_5 = currValue;
    }
  }
  check_listPreviewVisibleEmitter(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.listPreviewVisibleEmitter = currValue;
      this._expr_6 = currValue;
    }
  }
  check_activeRowEmitter(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.activeRowEmitter = currValue;
      this._expr_7 = currValue;
    }
  }
  check_loadMoreEmitter(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.loadMoreEmitter = currValue;
      this._expr_8 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.handleRequestErrorEmitter.subscribe(_eventHandler.bind(view,'handleRequestError'))); }
  }
}
var renderType_ListViewComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ListViewComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.ListViewComponent>;
  _ListViewComponent_0_3:Wrapper_ListViewComponent;
  _query_PaginationComponent_0_0:import6.QueryList<any>;
  _query_SearchComponent_0_1:import6.QueryList<any>;
  _query_CounterComponent_0_2:import6.QueryList<any>;
  _query_ListRowComponent_0_3:import6.QueryList<any>;
  _query_ListPreviewComponent_0_4:import6.QueryList<any>;
  _query_NotFoundComponent_0_5:import6.QueryList<any>;
  _query_NoResultsComponent_0_6:import6.QueryList<any>;
  _query_ClearFiltersComponent_0_7:import6.QueryList<any>;
  _query_ShowMoreComponent_0_8:import6.QueryList<any>;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ListViewComponent_Host0,renderType_ListViewComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'c-list-view',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ListViewComponent0(this.viewUtils,this,0,this._el_0);
    this._ListViewComponent_0_3 = new Wrapper_ListViewComponent();
    this._query_PaginationComponent_0_0 = new import6.QueryList<any>();
    this._query_SearchComponent_0_1 = new import6.QueryList<any>();
    this._query_CounterComponent_0_2 = new import6.QueryList<any>();
    this._query_ListRowComponent_0_3 = new import6.QueryList<any>();
    this._query_ListPreviewComponent_0_4 = new import6.QueryList<any>();
    this._query_NotFoundComponent_0_5 = new import6.QueryList<any>();
    this._query_NoResultsComponent_0_6 = new import6.QueryList<any>();
    this._query_ClearFiltersComponent_0_7 = new import6.QueryList<any>();
    this._query_ShowMoreComponent_0_8 = new import6.QueryList<any>();
    this.compView_0.create(this._ListViewComponent_0_3.context);
    this._query_SearchComponent_0_1.reset(([] as any[]));
    this._ListViewComponent_0_3.context.searchComponent = this._query_SearchComponent_0_1.first;
    this._query_ListRowComponent_0_3.reset(([] as any[]));
    this._ListViewComponent_0_3.context.listRowComponent = this._query_ListRowComponent_0_3.first;
    this._query_ListPreviewComponent_0_4.reset(([] as any[]));
    this._ListViewComponent_0_3.context.listPreviewComponent = this._query_ListPreviewComponent_0_4.first;
    this._query_NotFoundComponent_0_5.reset(([] as any[]));
    this._ListViewComponent_0_3.context.notFoundComponent = this._query_NotFoundComponent_0_5.first;
    this._query_NoResultsComponent_0_6.reset(([] as any[]));
    this._ListViewComponent_0_3.context.noResultsComponent = this._query_NoResultsComponent_0_6.first;
    this._query_ShowMoreComponent_0_8.reset(([] as any[]));
    this._ListViewComponent_0_3.context.showMoreComponent = this._query_ShowMoreComponent_0_8.first;
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._ListViewComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ListViewComponent) && (0 === requestNodeIndex))) { return this._ListViewComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ListViewComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_PaginationComponent_0_0.dirty) {
        this._query_PaginationComponent_0_0.reset(([] as any[]));
        this._ListViewComponent_0_3.context.paginationComponent = this._query_PaginationComponent_0_0;
        this._query_PaginationComponent_0_0.notifyOnChanges();
      }
      if (this._query_CounterComponent_0_2.dirty) {
        this._query_CounterComponent_0_2.reset(([] as any[]));
        this._ListViewComponent_0_3.context.counterComponents = this._query_CounterComponent_0_2;
        this._query_CounterComponent_0_2.notifyOnChanges();
      }
      if (this._query_ClearFiltersComponent_0_7.dirty) {
        this._query_ClearFiltersComponent_0_7.reset(([] as any[]));
        this._ListViewComponent_0_3.context.clearFiltersComponent = this._query_ClearFiltersComponent_0_7;
        this._query_ClearFiltersComponent_0_7.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._ListViewComponent_0_3.context.ngAfterContentInit(); }
    }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ListViewComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const ListViewComponentNgFactory:import9.ComponentFactory<import0.ListViewComponent> = new import9.ComponentFactory<import0.ListViewComponent>('c-list-view',View_ListViewComponent_Host0,import0.ListViewComponent);
const styles_ListViewComponent:any[] = ([] as any[]);
var renderType_ListViewComponent:import4.RenderComponentType = import3.createRenderComponentType('',1,import5.ViewEncapsulation.None,styles_ListViewComponent,{});
export class View_ListViewComponent0 extends import2.AppView<import0.ListViewComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ListViewComponent0,renderType_ListViewComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways);
    this._expr_3 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this.projectNodes(parentRenderNode,0);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'c-spinner',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_2 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3:any = this.context.loading;
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementProperty(this._el_1,'active',currVal_3);
      this._expr_3 = currVal_3;
    }
  }
}